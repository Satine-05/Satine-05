{"version":3,"file":"component---src-pages-using-typescript-tsx.js","mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;;AAEA,MAAMG,MAAM,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,kBACb;AACE,OAAK,EAAE;AACLC,IAAAA,UAAU,EAAG,eADR;AAELC,IAAAA,YAAY,EAAG;AAFV;AADT,gBAME;AACE,OAAK,EAAE;AACLC,IAAAA,MAAM,EAAG,QADJ;AAELC,IAAAA,QAAQ,EAAE,GAFL;AAGLC,IAAAA,OAAO,EAAG;AAHL;AADT,gBAOE;AAAI,OAAK,EAAE;AAAEF,IAAAA,MAAM,EAAE;AAAV;AAAX,gBACE,iDAAC,wCAAD;AACE,IAAE,EAAC,GADL;AAEE,OAAK,EAAE;AACLG,IAAAA,KAAK,EAAG,OADH;AAELC,IAAAA,cAAc,EAAG;AAFZ;AAFT,GAOGP,SAPH,CADF,CAPF,CANF,CADF;;AA6BAD,MAAM,CAACS,SAAP,GAAmB;AACjBR,EAAAA,SAAS,EAAEH,0DAAgBY;AADV,CAAnB;AAIAV,MAAM,CAACW,YAAP,GAAsB;AACpBV,EAAAA,SAAS,EAAG;AADQ,CAAtB;AAIA,iEAAeD,MAAf;;;;;;;;;;;;;;;;;;;;;;;;;ACzCA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAGA;AACA;;AAEA,MAAMY,MAAM,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AAC/B,QAAMC,IAAI,GAAG,wEAAb;AAUA,sBACE,iHACE,iDAAC,+CAAD;AAAQ,aAAS,EAAE,0BAAAA,IAAI,CAACC,IAAL,CAAUC,YAAV,gFAAwBC,KAAxB,KAAkC;AAArD,IADF,eAEE;AACE,SAAK,EAAE;AACLb,MAAAA,MAAM,EAAG,QADJ;AAELC,MAAAA,QAAQ,EAAE,GAFL;AAGLC,MAAAA,OAAO,EAAG;AAHL;AADT,kBAOE,+DAAOO,QAAP,CAPF,eAQE;AACE,SAAK,EAAE;AACLK,MAAAA,SAAS,EAAG;AADP;AADT,cAKK,IAAIC,IAAJ,GAAWC,WAAX,EALL,kBAMI,GANJ,eAOE;AAAG,QAAI,EAAC;AAAR,cAPF,CARF,CAFF,CADF;AAuBD,CAlCD;;AAoCAR,MAAM,CAACH,SAAP,GAAmB;AACjBI,EAAAA,QAAQ,EAAEf,mEAAyBwB;AADlB,CAAnB;AAIA,iEAAeV,MAAf;;;;;;;;;;;;;;;;;;;;;;;ACtDA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;AAGA,SAASY,GAAT,CAAa;AAAEC,EAAAA,WAAF;AAAeC,EAAAA,IAAf;AAAqBC,EAAAA,IAArB;AAA2BV,EAAAA;AAA3B,CAAb,EAAiD;AAAA;;AAC/C,QAAM;AAAEF,IAAAA;AAAF,4EAAN;AAcA,QAAMa,eAAe,GAAGH,WAAW,IAAIV,IAAI,CAACC,YAAL,CAAkBS,WAAzD;AACA,QAAMI,YAAY,yBAAGd,IAAI,CAACC,YAAR,uDAAG,mBAAmBC,KAAxC;AAEA,sBACE,iDAAC,gDAAD;AACE,kBAAc,EAAE;AACdS,MAAAA;AADc,KADlB;AAIE,SAAK,EAAET,KAJT;AAKE,iBAAa,EAAEY,YAAY,GAAI,QAAOA,YAAa,EAAxB,GAA4B,IALzD;AAME,QAAI,EAAE,CACJ;AACEC,MAAAA,IAAI,EAAG,aADT;AAEEC,MAAAA,OAAO,EAAEH;AAFX,KADI,EAKJ;AACEI,MAAAA,QAAQ,EAAG,UADb;AAEED,MAAAA,OAAO,EAAEd;AAFX,KALI,EASJ;AACEe,MAAAA,QAAQ,EAAG,gBADb;AAEED,MAAAA,OAAO,EAAEH;AAFX,KATI,EAaJ;AACEI,MAAAA,QAAQ,EAAG,SADb;AAEED,MAAAA,OAAO,EAAG;AAFZ,KAbI,EAiBJ;AACED,MAAAA,IAAI,EAAG,cADT;AAEEC,MAAAA,OAAO,EAAG;AAFZ,KAjBI,EAqBJ;AACED,MAAAA,IAAI,EAAG,iBADT;AAEEC,MAAAA,OAAO,EAAE,wBAAAhB,IAAI,CAACC,YAAL,4EAAmBiB,MAAnB,KAA8B;AAFzC,KArBI,EAyBJ;AACEH,MAAAA,IAAI,EAAG,eADT;AAEEC,MAAAA,OAAO,EAAEd;AAFX,KAzBI,EA6BJ;AACEa,MAAAA,IAAI,EAAG,qBADT;AAEEC,MAAAA,OAAO,EAAEH;AAFX,KA7BI,EAiCJM,MAjCI,CAiCGP,IAjCH;AANR,IADF;AA2CD;;AAEDH,GAAG,CAACb,YAAJ,GAAmB;AACjBe,EAAAA,IAAI,EAAG,IADU;AAEjBC,EAAAA,IAAI,EAAE,EAFW;AAGjBF,EAAAA,WAAW,EAAG;AAHG,CAAnB;AAMAD,GAAG,CAACf,SAAJ,GAAgB;AACdgB,EAAAA,WAAW,EAAE3B,0DADC;AAEd4B,EAAAA,IAAI,EAAE5B,0DAFQ;AAGd6B,EAAAA,IAAI,EAAE7B,yDAAA,CAAkBA,0DAAlB,CAHQ;AAIdmB,EAAAA,KAAK,EAAEnB,qEAA2BwB;AAJpB,CAAhB;AAOA,iEAAeE,GAAf;;;;;;;;;;;;;;;;;;;;ACxFA;AACA;AACA;AAEA;AACA;;AAQA,MAAMa,eAA+C,GAAG,CAAC;AAAEvB,EAAAA,IAAF;AAAQwB,EAAAA;AAAR,CAAD,kBACtD,iDAAC,0DAAD,qBACE,iDAAC,uDAAD;AAAK,OAAK,EAAC;AAAX,EADF,eAEE,sGAFF,eAGE,sHAC2C,wEAD3C,+EAE8C,2EAF9C,yEAHF,eAQE,sHAC2C,0EAD3C,oCAEM,0EAFN,gCAEsC,wEAFtC,WARF,eAYE,+FACiCA,IADjC,2BAC2D,GAD3D,EAEGxB,IAAI,CAACC,IAAL,CAAUwB,SAFb,MAZF,eAgBE,+FACkC,GADlC,eAEE;AAAG,MAAI,EAAC;AAAR,oCAFF,MAhBF,eAuBE,iDAAC,wCAAD;AAAM,IAAE,EAAC;AAAT,6BAvBF,CADF;;AA4BA,iEAAeF,eAAf;AAEO,MAAMG,KAAK,eAAX","sources":["webpack://gatsby-starter-default/./src/components/header.js","webpack://gatsby-starter-default/./src/components/layout.js","webpack://gatsby-starter-default/./src/components/seo.js","webpack://gatsby-starter-default/./src/pages/using-typescript.tsx"],"sourcesContent":["import * as React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Link } from \"gatsby\"\n\nconst Header = ({ siteTitle }) => (\n  <header\n    style={{\n      background: `rebeccapurple`,\n      marginBottom: `1.45rem`,\n    }}\n  >\n    <div\n      style={{\n        margin: `0 auto`,\n        maxWidth: 960,\n        padding: `1.45rem 1.0875rem`,\n      }}\n    >\n      <h1 style={{ margin: 0 }}>\n        <Link\n          to=\"/\"\n          style={{\n            color: `white`,\n            textDecoration: `none`,\n          }}\n        >\n          {siteTitle}\n        </Link>\n      </h1>\n    </div>\n  </header>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport * as React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nimport Header from \"./header\"\nimport \"./layout.css\"\n\nconst Layout = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `)\n\n  return (\n    <>\n      <Header siteTitle={data.site.siteMetadata?.title || `Title`} />\n      <div\n        style={{\n          margin: `0 auto`,\n          maxWidth: 960,\n          padding: `0 1.0875rem 1.45rem`,\n        }}\n      >\n        <main>{children}</main>\n        <footer\n          style={{\n            marginTop: `2rem`,\n          }}\n        >\n          Â© {new Date().getFullYear()}, Built with\n          {` `}\n          <a href=\"https://www.gatsbyjs.com\">Gatsby</a>\n        </footer>\n      </div>\n    </>\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport * as React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Helmet } from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction Seo({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={defaultTitle ? `%s | ${defaultTitle}` : null}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata?.author || ``,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSeo.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSeo.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default Seo\n","// If you don't want to use TypeScript you can delete this file!\nimport * as React from \"react\"\nimport { PageProps, Link, graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\ntype DataProps = {\n  site: {\n    buildTime: string\n  }\n}\n\nconst UsingTypescript: React.FC<PageProps<DataProps>> = ({ data, path }) => (\n  <Layout>\n    <Seo title=\"Using TypeScript\" />\n    <h1>Gatsby supports TypeScript by default!</h1>\n    <p>\n      This means that you can create and write <em>.ts/.tsx</em> files for your\n      pages, components etc. Please note that the <em>gatsby-*.js</em> files\n      (like gatsby-node.js) currently don't support TypeScript yet.\n    </p>\n    <p>\n      For type checking you'll want to install <em>typescript</em> via npm and\n      run <em>tsc --init</em> to create a <em>tsconfig</em> file.\n    </p>\n    <p>\n      You're currently on the page \"{path}\" which was built on{\" \"}\n      {data.site.buildTime}.\n    </p>\n    <p>\n      To learn more, head over to our{\" \"}\n      <a href=\"https://www.gatsbyjs.com/docs/typescript/\">\n        documentation about TypeScript\n      </a>\n      .\n    </p>\n    <Link to=\"/\">Go back to the homepage</Link>\n  </Layout>\n)\n\nexport default UsingTypescript\n\nexport const query = graphql`\n  {\n    site {\n      buildTime(formatString: \"YYYY-MM-DD hh:mm a z\")\n    }\n  }\n`\n"],"names":["React","PropTypes","Link","Header","siteTitle","background","marginBottom","margin","maxWidth","padding","color","textDecoration","propTypes","string","defaultProps","Layout","children","data","site","siteMetadata","title","marginTop","Date","getFullYear","node","isRequired","Helmet","Seo","description","lang","meta","metaDescription","defaultTitle","name","content","property","author","concat","arrayOf","object","UsingTypescript","path","buildTime","query"],"sourceRoot":""}